var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Here is a sample REPL session to draw a dispersion relationship by using this package.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"First, define KronigPennyPotential by calling its constructor.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using ExtendedKronigPennyMatrix\nv0=10; \nrho=0.5 # b/a;\npot=KronigPennyPotential(v0, rho)","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Use get_function method to acquire potential function.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using PyPlot\nclf()\nbegin\n   pf = get_potential(pot)\n   a = 1\n   xs=-a:a/100:2a\n   plot(xs, pf.(xs), \"k\")\n   xlim(0,1)\n   xlabel(L\"$x / a$\")\n   ylabel(L\"Energy / $E_0$\")\n   title( L\"$\\rho =$\"*string(rho))\n   savefig(\"plot1.png\", dpi=150); nothing # hide\nend","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"(Image: )","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Define KronigPennyModel by calling its constructor.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"nmax=60 # maximum of quantum numbers; \nKa=0 # wavenumber multiplied by a;\nmodel=KronigPennyModel(pot, nmax, Ka)","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"The field hnm of model contains Hamiltonian matrix.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"typeof(model.hnm)\nsize(model.hnm)\nmodel.hnm[1:5,1:5]","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Use LinearAlgebra.eigvals method to compute its energy eigenvalues. Refer to the LinearAlgebra standard library section in Julia documentation.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using LinearAlgebra\nevs=eigvals(model.hnm);\nevs[1:3]","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Modify the wavenumber Ka (multiplied by a), and update model by update! method.  The matrix, i.e., the field hnm, is also updated.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"update!(model, Ka=pi/4);\nevs=eigvals(model.hnm);\nevs[1:3]","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Draw dispersion curve by scanning Ka values between -pi pi.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using PyPlot\nclf()\nbegin\n   plot(xs .- 1/2, pf.(xs), \"k\")  # Holizontally shift to centerize the potential well\n   cm=get_cmap(\"tab10\")\n   for Ka in (-18:18)/18*π\n      update!(model, Ka=Ka)\n      ev = eigvals(model.hnm)\n      for i in 1:5\n         plot(Ka/ π, ev[i], \".\", color=cm(i-1))\n      end\n   end\n   xlim(-1,1)\n   ylim(-2,32)\n   xlabel(L\"$Ka / \\pi$\")\n   ylabel(L\"Energy / $E_0$\")\n   title( L\"$\\rho =$\"*string(rho))\n   savefig(\"plot2.png\", dpi=150); nothing # hide\nend","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"(Image: )","category":"page"},{"location":"reference/#Interface","page":"Reference","title":"Interface","text":"","category":"section"},{"location":"reference/#Alternates-iterator-for-quantum-numbers","page":"Reference","title":"Alternates - iterator for quantum numbers","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Alternates","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.Alternates","page":"Reference","title":"ExtendedKronigPennyMatrix.Alternates","text":"Alternates(nmax)\n\nis an iterator to generate the series 0 1 -1 2 -2 ldots  up to nmax as an ordering of quantum numbers.\n\ncollect(Alternates(0)) => [0]\ncollect(Alternates(1)) => [0, 1, -1]\ncollect(Alternates(2)) => [0, 1, -1, 2, -2]\n\n\n\n\n\n","category":"type"},{"location":"reference/","page":"Reference","title":"Reference","text":"Base.iterate(::Alternates, state::Int = 1)","category":"page"},{"location":"reference/#Base.iterate","page":"Reference","title":"Base.iterate","text":"Base.iterate(alt::Alternates, state::Int = 1)\n\n\n\n\n\n","category":"function"},{"location":"reference/#Potential","page":"Reference","title":"Potential","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ExtendedKronigPennyMatrix.Potential","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.Potential","page":"Reference","title":"ExtendedKronigPennyMatrix.Potential","text":"Potential\n\nis an abstraction of potential including\n\npotential height, and/or\nother parameters depending on specific potential.\n\nA subtype of Potential is expected to possess following methods:\n\nget_potential(<:Potential)\nreturns a function to evaluate potential value as a position.\n\n\n\n\n\n","category":"type"},{"location":"reference/#Model","page":"Reference","title":"Model","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ExtendedKronigPennyMatrix.Model","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.Model","page":"Reference","title":"ExtendedKronigPennyMatrix.Model","text":"Model\n\nis an abstraction of model including\n\npotential <: Potential\nnmax: maximum of quantum number\nmmax: size of Hailtonian matrix\nKa : wavenumber multiplied by a, period\nqnum <: Alternates\nand other parameters depending on specific potential\n\nA subtype of model is expected to possess following methods:\n\nupdate!(<:Model, ...)\nupdates parameters in model.\n\n\n\n\n\n","category":"type"},{"location":"reference/#Kronig-Penny-model","page":"Reference","title":"Kronig-Penny model","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"KronigPennyPotential","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.KronigPennyPotential","page":"Reference","title":"ExtendedKronigPennyMatrix.KronigPennyPotential","text":"mutable struct KronigPennyPotential <: Potential\n\nKronigPennyPotential(v0, ρ) # Default constructor\n\nholds parameters of Kronig-Penny potential.\n\nFields\n\nv0 : potential height in units of E_1^(0)\nρ : barrier width in units of period a,  rho = dfracba, 0  rho  1\nNote that a position x is expressed in units of a throughout this package.\n\nThe constructor KronigPennyPotential(v0, ρ) confirms that 0 ≤ ρ ≤ 1, otherwise throws an error.\n\n\n\n\n\n","category":"type"},{"location":"reference/","page":"Reference","title":"Reference","text":"get_potential(::KronigPennyPotential)","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.get_potential-Tuple{KronigPennyPotential}","page":"Reference","title":"ExtendedKronigPennyMatrix.get_potential","text":"get_potential(::KronigPennyPotential)\n\nreturns a function v to evaluate potential v(x) as a position x,  such that:\n\nbeginaligned\nv(x)  = begincases \nv_0 \ntextinside well ie \n dfrac1-rho2 le dfracxa le dfrac1+rho2 \n  \n0  textoutside wellendcases\n\nv(x+a) = v(x)\nendaligned\n\nNote that a position x is expressed in units of a throughout this package.\n\n\n\n\n\n","category":"method"},{"location":"reference/","page":"Reference","title":"Reference","text":"KronigPennyModel","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.KronigPennyModel","page":"Reference","title":"ExtendedKronigPennyMatrix.KronigPennyModel","text":"mutable struct KronigPennyModel <: Model\n\nholds parameters of Kronig-Penny model.\n\nFields given to the constructor:\npotential\nnmax\nKa : wavenumber multiplied by a, period\nFields calculated by constructor:\nmmax : size of Hamiltonian matrix\nqnum : iterator of quantum numbers\nFields calculated by constructor and update! methods:\nhnm : hamiltonian matrix\n\n\n\n\n\n","category":"type"},{"location":"reference/","page":"Reference","title":"Reference","text":"KronigPennyModel(::KronigPennyPotential, nmax, Ka)","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.KronigPennyModel-Tuple{KronigPennyPotential, Any, Any}","page":"Reference","title":"ExtendedKronigPennyMatrix.KronigPennyModel","text":"KronigPennyModel(::KronigPennyPotential, nmax, Ka)\n\nis a constructor of Kronig-Penny model, and defines other fields: qnum, nmax, and hnm\n\nMandantory parameters:\npot : potential\nnmax : maximum of quantum numbers\nKa : wavenumber multiplied by a, period\n\n\n\n\n\n","category":"method"},{"location":"reference/","page":"Reference","title":"Reference","text":"update!(::KronigPennyModel; Ka=nothing)","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.update!-Tuple{KronigPennyModel}","page":"Reference","title":"ExtendedKronigPennyMatrix.update!","text":"update!(model_lem::KronigPennyModel; Ka=nothing)\n\nupdates Kronnig-Penny model.\n\nOptional parameters\nKa : wavenumber multiplied by a, period\n\n\n\n\n\n","category":"method"},{"location":"reference/","page":"Reference","title":"Reference","text":"ExtendedKronigPennyMatrix.constuctMatrix(::KronigPennyModel)","category":"page"},{"location":"reference/#ExtendedKronigPennyMatrix.constuctMatrix-Tuple{KronigPennyModel}","page":"Reference","title":"ExtendedKronigPennyMatrix.constuctMatrix","text":"constuctMatrix(model_lem::KronigPennyModel)\n\ncomputes and fills Hamiltonian matrix fields hnm in model_lem.\n\nh_nm = begincases \nleft(2n + dfracKapiright)^2 + v_0 (1-rho) \ntextfor n = mtext(diagonal elements) \nv_0\ndfrac(-1)^m-n+1pi dfracsin pi(m-n)rhom-n \n  \n textfor n neq mtext(off-diagonal elements)endcases\n\n\n\n\n\n","category":"method"},{"location":"reference/#Alphabetical-Index","page":"Reference","title":"Alphabetical Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"usageja/#使い方","page":"使い方","title":"使い方","text":"","category":"section"},{"location":"usageja/","page":"使い方","title":"使い方","text":"このパッケージを利用して、分散関係を描画する手順を紹介します。 JuliaのREPLを用いた例です。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"最初に、KronigPennyPotential オブジェクトを作成します。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"using ExtendedKronigPennyMatrix\nv0=10; \nrho=0.5 # b/a;\npot=KronigPennyPotential(v0, rho)","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"get_function関数を用いて、ポテンシャル関数を入手します。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"ここでは PyPlot パッケージを用いて、プロットします。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"using PyPlot\nclf()\nbegin\n   pf = get_potential(pot)\n   a = 1\n   xs=-a:a/100:2a\n   plot(xs, pf.(xs), \"k\")\n   xlim(0,1)\n   xlabel(L\"$x / a$\")\n   ylabel(L\"Energy / $E_0$\")\n   title( L\"$\\rho =$\"*string(rho))\n   # savefig(\"plot1.png\", dpi=150); nothing # hide\nend","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"(Image: )","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"次に、KronigPennyModel オブジェクトを作成します。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"nmax=60 # maximum of quantum numbers; \nKa=0 # wavenumber multiplied by a;\nmodel=KronigPennyModel(pot, nmax, Ka)","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"このオブジェクトの hnm フィールドに、ハミルトニアン行列が計算されました。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"typeof(model.hnm)\nsize(model.hnm)\nmodel.hnm[1:5,1:5]","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"Juliaの LinearAlgebra.eigvals メソッドを用いて、エネルギー固有値を計算します。 詳しくは、Juliaドキュメントの LinearAlgebra 標準ライブラリを参照してください。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"using LinearAlgebra\nevs=eigvals(model.hnm);\nevs[1:3]","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"波数（と周期aの積）Kaを変えて、update!メソッドでモデルmodelを更新します。 ハミルトニアン行列（フィールド hnm）も更新されます。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"update!(model, Ka=pi/4);\nevs=eigvals(model.hnm);\nevs[1:3]","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"波数（と周期aの積）Ka を -pi pi の範囲で走査して、分散関係を描きます。","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"using PyPlot\nclf()\nbegin\n   plot(xs .- 1/2, pf.(xs), \"k\")  # Holizontally shift to centerize the potential well\n   cm=get_cmap(\"tab10\")\n   for Ka in (-18:18)/18*π\n      update!(model, Ka=Ka)\n      ev = eigvals(model.hnm)\n      for i in 1:5\n         plot(Ka/ π, ev[i], \".\", color=cm(i-1))\n      end\n   end\n   xlim(-1,1)\n   ylim(-2,32)\n   xlabel(L\"$Ka / \\pi$\")\n   ylabel(L\"Energy / $E_0$\")\n   title( L\"$\\rho =$\"*string(rho))\n   savefig(\"plot2.png\", dpi=150); nothing # hide\nend","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ExtendedKronigPennyMatrix","category":"page"},{"location":"#ExtendedKronigPennyMatrix","page":"Home","title":"ExtendedKronigPennyMatrix","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExtendedKronigPennyMatrix.","category":"page"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Construct a numerical Hamiltonian matrix (h_nm) of Kronig-Penny model  extended to arbitrary potentials  based on the paper written by Pavelich and Marsiglio.","category":"page"},{"location":"","page":"Home","title":"Home","text":"sum_m=1^infty h_nm c_m = ec_n","category":"page"},{"location":"","page":"Home","title":"Home","text":"Energy is expressed in units of E_1^(0).","category":"page"},{"location":"","page":"Home","title":"Home","text":"E_1^(0) = dfracpi^2hbar^22ma^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"Refer the formulations to the following paper:","category":"page"},{"location":"","page":"Home","title":"Home","text":"R. L. Pavelicha and F. Marsigliob, \"The Kronig-Penney model extended to arbitrary potentials via numerical matrix mechanics,\" American Journal of Physics 83, 774 (2015).  DOI:10.1119/1.4923026,  ResearchGate","category":"page"}]
}
